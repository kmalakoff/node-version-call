{"version":3,"sources":["index.ts"],"sourcesContent":["const versionExecPath = require('./versionExecPath.ts');\n\nconst SLEEP_MS = 60;\n\nexport type VersionInfo = {\n  version: string;\n  callbacks: boolean;\n};\n\nlet functionExec = null; // break dependencies\n// biome-ignore lint/suspicious/noExplicitAny: <explanation>\nexport default function call(version: string | VersionInfo, filePath: string, ...args): any {\n  if (!functionExec) functionExec = require('function-exec-sync'); // break dependencies\n\n  let callbacks = false;\n  if (typeof version !== 'string') {\n    callbacks = (version as VersionInfo).callbacks ?? false;\n    version = (version as VersionInfo).version;\n\n    // need to unwrap callbacks\n    if (callbacks && version === 'local') version = process.version;\n  }\n\n  // local - just call\n  if (version === 'local' && !callbacks) {\n    const fn = require(filePath);\n    return typeof fn === 'function' ? fn.apply(null, args) : fn;\n  }\n\n  // call a version of node\n\n  const execPath = versionExecPath(version);\n  return functionExec.apply(\n    null,\n    [\n      {\n        execPath,\n        env: process.env,\n        cwd: process.cwd(),\n        sleep: SLEEP_MS,\n        callbacks,\n      },\n      filePath,\n    ].concat(args)\n  );\n}\n"],"names":["call","versionExecPath","require","SLEEP_MS","functionExec","version","filePath","args","callbacks","process","fn","apply","execPath","env","cwd","sleep","concat"],"mappings":";;;;+BAUA,4DAA4D;AAC5D;;;eAAwBA;;;AAXxB,IAAMC,kBAAkBC,QAAQ;AAEhC,IAAMC,WAAW;AAOjB,IAAIC,eAAe,MAAM,qBAAqB;AAE/B,SAASJ,KAAKK,OAA6B,EAAEC,QAAgB;IAAE,IAAA,IAAA,OAAA,UAAA,QAAA,AAAGC,OAAH,UAAA,OAAA,IAAA,OAAA,QAAA,OAAA,GAAA,OAAA,MAAA;QAAGA,KAAH,OAAA,KAAA,SAAA,CAAA,KAAO;;IACnF,IAAI,CAACH,cAAcA,eAAeF,QAAQ,uBAAuB,qBAAqB;IAEtF,IAAIM,YAAY;IAChB,IAAI,OAAOH,YAAY,UAAU;YACnB;QAAZG,YAAY,CAAA,qBAAA,AAACH,QAAwBG,SAAS,cAAlC,gCAAA,qBAAsC;QAClDH,UAAU,AAACA,QAAwBA,OAAO;QAE1C,2BAA2B;QAC3B,IAAIG,aAAaH,YAAY,SAASA,UAAUI,QAAQJ,OAAO;IACjE;IAEA,oBAAoB;IACpB,IAAIA,YAAY,WAAW,CAACG,WAAW;QACrC,IAAME,KAAKR,QAAQI;QACnB,OAAO,OAAOI,OAAO,aAAaA,GAAGC,KAAK,CAAC,MAAMJ,QAAQG;IAC3D;IAEA,yBAAyB;IAEzB,IAAME,WAAWX,gBAAgBI;IACjC,OAAOD,aAAaO,KAAK,CACvB,MACA;QACE;YACEC,UAAAA;YACAC,KAAKJ,QAAQI,GAAG;YAChBC,KAAKL,QAAQK,GAAG;YAChBC,OAAOZ;YACPK,WAAAA;QACF;QACAF;KACD,CAACU,MAAM,CAACT;AAEb"}