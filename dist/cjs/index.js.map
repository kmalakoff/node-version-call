{"version":3,"sources":["index.ts"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst spawnSync = require('cross-spawn-cb').sync;\nconst JSONBuffer = require('json-buffer');\nconst mkdirp = require('mkdirp');\nconst callFn = require('./callFn');\nconst shortHash = require('short-hash');\n\nexport interface JSONObject {\n  [x: string]: any;\n}\nexport type CallOptions = {\n  args?: any[];\n  env?: JSONObject;\n};\n\nconst localCallFile = path.join(__dirname, 'localCall.js');\n\nfunction unlinkSafe(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch {\n    // skip\n  }\n}\n\nexport default function call(filePath: string, version: string, options: CallOptions = {}): any {\n  const args = options.args || [];\n  let res;\n  if (version === 'local') res = callFn(filePath, args);\n  else {\n    const temp = path.join(tmpdir(), 'node-version-call', shortHash(process.cwd()));\n    const input = path.join(temp, suffix('input'));\n    const output = path.join(temp, suffix('output'));\n\n    // store data to a file\n    const callData = { filePath, args };\n    mkdirp.sync(path.dirname(input));\n    fs.writeFileSync(input, JSONBuffer.stringify(callData));\n    unlinkSafe(output);\n\n    // call the function\n    const env = options.env || process.env;\n    try {\n      spawnSync('nvu', [version, 'node', localCallFile, input, output], { env, stdio: 'string' });\n    } catch (err) {\n      if (err.stderr.indexOf('ExperimentalWarning') < 0) throw err;\n    }\n\n    // get data and clean up\n    res = JSONBuffer.parse(fs.readFileSync(output, 'utf8'));\n    unlinkSafe(input);\n    unlinkSafe(output);\n  }\n\n  // error res\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  return res.value;\n}\n"],"names":["call","filePath","version","options","args","res","callFn","temp","path","join","tmpdir","shortHash","process","cwd","input","suffix","output","callData","mkdirp","sync","dirname","fs","writeFileSync","JSONBuffer","stringify","unlinkSafe","env","spawnSync","localCallFile","stdio","err","stderr","indexOf","parse","readFileSync","error","Error","message","stack","value","require","__dirname","filename","unlinkSync"],"mappings":"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"}