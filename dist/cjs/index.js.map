{"version":3,"sources":["index.ts"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst spawnSync = require('cross-spawn-cb').sync;\nconst JSONBuffer = require('json-buffer');\nconst callFn = require('./callFn');\n\nexport interface JSONObject {\n  [x: string]: any;\n}\nexport type CallOptions = {\n  args?: any[];\n  env?: JSONObject;\n};\n\nconst localCallFile = path.join(__dirname, 'localCall.js');\n\nfunction unlinkSafe(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch {\n    // skip\n  }\n}\n\nexport default function call(filePath: string, version: string, options: CallOptions = {}): any {\n  const args = options.args || [];\n  let res;\n  if (version === 'local') res = callFn(filePath, args);\n  else {\n    const callData = { filePath, args };\n    const temp = tmpdir();\n    const inputFile = path.join(temp, suffix(\"nvc-input\"));\n    const outputFile = path.join(temp, suffix(\"nvc-output\"));\n\n    // store data to a file\n    fs.writeFileSync(inputFile, JSONBuffer.stringify(callData));\n    unlinkSafe(outputFile);\n\n    // call the function\n    const env = options.env || process.env;\n    spawnSync('nvu', [version, 'node', localCallFile, inputFile, outputFile], { env, stdio: 'string' });\n\n    // get data and clean up\n    res = JSONBuffer.parse(fs.readFileSync(outputFile, 'utf8'));\n    unlinkSafe(inputFile);\n    unlinkSafe(outputFile);\n  }\n\n  // res res\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  return res.value;\n}\n"],"names":["call","filePath","version","options","args","res","callFn","callData","temp","tmpdir","inputFile","path","join","suffix","outputFile","fs","writeFileSync","JSONBuffer","stringify","unlinkSafe","env","process","spawnSync","localCallFile","stdio","parse","readFileSync","error","err","Error","message","stack","value","require","sync","__dirname","filename","unlinkSync"],"mappings":"AAAA;;;;kBA0BwBA,IAAI;AAAb,SAASA,IAAI,CAACC,QAAgB,EAAEC,OAAe,EAAkC;QAAhCC,OAAoB,GAApBA,+CAAyB,kBAAF,EAAE;IACvF,IAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAI,EAAE,AAAC;IAChC,IAAIC,GAAG,AAAC;IACR,IAAIH,OAAO,KAAK,OAAO,EAAEG,GAAG,GAAGC,MAAM,CAACL,QAAQ,EAAEG,IAAI,CAAC,CAAC;SACjD;QACH,IAAMG,QAAQ,GAAG;YAAEN,QAAQ,EAARA,QAAQ;YAAEG,IAAI,EAAJA,IAAI;SAAE,AAAC;QACpC,IAAMI,IAAI,GAAGC,MAAM,EAAE,AAAC;QACtB,IAAMC,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACJ,IAAI,EAAEK,MAAM,CAAC,WAAW,CAAC,CAAC,AAAC;QACvD,IAAMC,UAAU,GAAGH,IAAI,CAACC,IAAI,CAACJ,IAAI,EAAEK,MAAM,CAAC,YAAY,CAAC,CAAC,AAAC;QAEzD,uBAAuB;QACvBE,EAAE,CAACC,aAAa,CAACN,SAAS,EAAEO,UAAU,CAACC,SAAS,CAACX,QAAQ,CAAC,CAAC,CAAC;QAC5DY,UAAU,CAACL,UAAU,CAAC,CAAC;QAEvB,oBAAoB;QACpB,IAAMM,GAAG,GAAGjB,OAAO,CAACiB,GAAG,IAAIC,OAAO,CAACD,GAAG,AAAC;QACvCE,SAAS,CAAC,KAAK,EAAE;YAACpB,OAAO;YAAE,MAAM;YAAEqB,aAAa;YAAEb,SAAS;YAAEI,UAAU;SAAC,EAAE;YAAEM,GAAG,EAAHA,GAAG;YAAEI,KAAK,EAAE,QAAQ;SAAE,CAAC,CAAC;QAEpG,wBAAwB;QACxBnB,GAAG,GAAGY,UAAU,CAACQ,KAAK,CAACV,EAAE,CAACW,YAAY,CAACZ,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5DK,UAAU,CAACT,SAAS,CAAC,CAAC;QACtBS,UAAU,CAACL,UAAU,CAAC,CAAC;KACxB;IAED,UAAU;IACV,IAAIT,GAAG,CAACsB,KAAK,EAAE;QACb,IAAMC,GAAG,GAAG,IAAIC,KAAK,CAACxB,GAAG,CAACsB,KAAK,CAACG,OAAO,CAAC,AAAC;QACzC,IAAIzB,GAAG,CAACsB,KAAK,CAACI,KAAK,EAAEH,GAAG,CAACG,KAAK,GAAG1B,GAAG,CAACsB,KAAK,CAACI,KAAK,CAAC;QACjD,MAAMH,GAAG,CAAC;KACX;IACD,OAAOvB,GAAG,CAAC2B,KAAK,CAAC;CAClB;AAzDD,IAAMrB,IAAI,GAAGsB,OAAO,CAAC,MAAM,CAAC,AAAC;AAC7B,IAAMlB,EAAE,GAAGkB,OAAO,CAAC,IAAI,CAAC,AAAC;AACzB,IAAMxB,MAAM,GAAGwB,OAAO,CAAC,IAAI,CAAC,CAACxB,MAAM,IAAIwB,OAAO,CAAC,SAAS,CAAC,CAACxB,MAAM,AAAC;AACjE,IAAMI,MAAM,GAAGoB,OAAO,CAAC,aAAa,CAAC,AAAC;AACtC,IAAMX,SAAS,GAAGW,OAAO,CAAC,gBAAgB,CAAC,CAACC,IAAI,AAAC;AACjD,IAAMjB,UAAU,GAAGgB,OAAO,CAAC,aAAa,CAAC,AAAC;AAC1C,IAAM3B,MAAM,GAAG2B,OAAO,CAAC,UAAU,CAAC,AAAC;AAUnC,IAAMV,aAAa,GAAGZ,IAAI,CAACC,IAAI,CAACuB,SAAS,EAAE,cAAc,CAAC,AAAC;AAE3D,SAAShB,UAAU,CAACiB,QAAQ,EAAE;IAC5B,IAAI;QACFrB,EAAE,CAACsB,UAAU,CAACD,QAAQ,CAAC,CAAC;KACzB,CAAC,UAAM;IACN,OAAO;KACR;CACF"}