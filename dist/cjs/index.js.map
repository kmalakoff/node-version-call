{"version":3,"sources":["index.ts"],"sourcesContent":["const path = require('path');\nconst cp = require('child_process');\nconst fs = require('fs');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst JSONBuffer = require('json-buffer');\nconst mkdirp = require('mkdirp');\nconst shortHash = require('short-hash');\nconst sleep = require('thread-sleep-compat');\n\nconst versionExecPath = require('./versionExecPath');\nconst callFn = require('./callFn');\n\nfunction unlinkSafe(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch {\n    // skip\n  }\n}\n\nexport default function call(version: string, filePath: string /* arguments */): any {\n  const args = Array.prototype.slice.call(arguments, 2);\n  let res;\n  if (version === 'local') res = callFn(filePath, args);\n  else {\n    const temp = path.join(tmpdir(), 'node-version-call', shortHash(process.cwd()));\n    const input = path.join(temp, suffix('input'));\n    const output = path.join(temp, suffix('output'));\n\n    // store data to a file\n    const workerData = { filePath, args, env: process.env, cwd: process.cwd() };\n    mkdirp.sync(path.dirname(input));\n    fs.writeFileSync(input, JSONBuffer.stringify(workerData));\n    unlinkSafe(output);\n\n    // call the function\n    const execPath = versionExecPath(version);\n    const worker = path.join(__dirname, 'worker.js');\n    cp.exec(`\"${execPath}\" \"${worker}\" \"${input}\" \"${output}\"`);\n    while (!fs.existsSync(output)) {\n      sleep(50);\n    }\n\n    // get data and clean up\n    res = JSONBuffer.parse(fs.readFileSync(output, 'utf8'));\n    unlinkSafe(input);\n    unlinkSafe(output);\n  }\n\n  // error res\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  return res.value;\n}\n"],"names":["call","version","filePath","args","Array","prototype","slice","arguments","res","callFn","temp","path","join","tmpdir","shortHash","process","cwd","input","suffix","output","workerData","env","mkdirp","sync","dirname","fs","writeFileSync","JSONBuffer","stringify","unlinkSafe","execPath","versionExecPath","worker","__dirname","cp","exec","existsSync","sleep","parse","readFileSync","error","err","Error","message","stack","value","require","filename","unlinkSync"],"mappings":"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"}