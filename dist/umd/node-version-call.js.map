{"version":3,"file":"node-version-call.js","sources":["../../src/index.ts"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst spawnSync = require('cross-spawn-cb').sync;\nconst JSONBuffer = require('json-buffer');\nconst callFn = require('./callFn');\n\nexport interface JSONObject {\n  [x: string]: any;\n}\nexport type CallOptions = {\n  args?: any[];\n  env?: JSONObject;\n};\n\nconst localCallFile = path.join(__dirname, 'localCall.js');\n\nfunction unlinkSafe(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch {\n    // skip\n  }\n}\n\nexport default function call(filePath: string, version: string, options: CallOptions = {}): any {\n  const args = options.args || [];\n  let res;\n  if (version === 'local') res = callFn(filePath, args);\n  else {\n    const callData = { filePath, args };\n    const temp = tmpdir();\n    const inputFile = path.join(temp, suffix(\"nvc-input\"));\n    const outputFile = path.join(temp, suffix(\"nvc-output\"));\n\n    // store data to a file\n    fs.writeFileSync(inputFile, JSONBuffer.stringify(callData));\n    unlinkSafe(outputFile);\n\n    // call the function\n    const env = options.env || process.env;\n    spawnSync('nvu', [version, 'node', localCallFile, inputFile, outputFile], { env, stdio: 'string' });\n\n    // get data and clean up\n    res = JSONBuffer.parse(fs.readFileSync(outputFile, 'utf8'));\n    unlinkSafe(inputFile);\n    unlinkSafe(outputFile);\n  }\n\n  // res res\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  return res.value;\n}\n"],"names":["path","require","fs","tmpdir","suffix","spawnSync","sync","JSONBuffer","callFn","localCallFile","join","__dirname","unlinkSafe","filename","unlinkSync","call","filePath","version","options","args","res","callData","temp","inputFile","outputFile","writeFileSync","stringify","env","process","stdio","parse","readFileSync","error","err","Error","message","stack","value"],"mappings":";;;;;;EAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC7B,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC,CAAC;EACzB,IAAME,MAAM,GAAGF,OAAO,CAAC,IAAI,CAAC,CAACE,MAAM,IAAIF,OAAO,CAAC,SAAS,CAAC,CAACE,MAAM,CAAC;EACjE,IAAMC,MAAM,GAAGH,OAAO,CAAC,aAAa,CAAC,CAAC;EACtC,IAAMI,SAAS,GAAGJ,OAAO,CAAC,gBAAgB,CAAC,CAACK,IAAI,CAAC;EACjD,IAAMC,UAAU,GAAGN,OAAO,CAAC,aAAa,CAAC,CAAC;EAC1C,IAAMO,MAAM,GAAGP,OAAO,CAAC,UAAU,CAAC,CAAC;EAUnC,IAAMQ,aAAa,GAAGT,IAAI,CAACU,IAAI,CAACC,SAAS,EAAE,cAAc,CAAC,CAAC;EAE3D,SAASC,UAAU,CAACC,QAAQ,EAAE;MAC5B,IAAI;EACFX,QAAAA,EAAE,CAACY,UAAU,CAACD,QAAQ,CAAC,CAAC;EACzB,KAAA,CAAC,OAAM,CAAA,EAAA;;EAEP,KAAA;EACF,CAAA;EAEc,SAASE,IAAI,CAACC,QAAgB,EAAEC,OAAe,EAAkC;UAAhCC,OAAoB,GAApBA,SAAyB,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE,CAAA;EACvF,IAAA,IAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAI,EAAE,CAAC;EAChC,IAAA,IAAIC,GAAG,CAAC;EACR,IAAA,IAAIH,OAAO,KAAK,OAAO,EAAEG,GAAG,GAAGZ,MAAM,CAACQ,QAAQ,EAAEG,IAAI,CAAC,CAAC;EACjD,SAAA;EACH,QAAA,IAAME,QAAQ,GAAG;EAAEL,YAAAA,QAAQ,EAARA,QAAQ;EAAEG,YAAAA,IAAI,EAAJA,IAAI;WAAE,CAAC;EACpC,QAAA,IAAMG,IAAI,GAAGnB,MAAM,EAAE,CAAC;EACtB,QAAA,IAAMoB,SAAS,GAAGvB,IAAI,CAACU,IAAI,CAACY,IAAI,EAAElB,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;EACvD,QAAA,IAAMoB,UAAU,GAAGxB,IAAI,CAACU,IAAI,CAACY,IAAI,EAAElB,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;;EAGzDF,QAAAA,EAAE,CAACuB,aAAa,CAACF,SAAS,EAAEhB,UAAU,CAACmB,SAAS,CAACL,QAAQ,CAAC,CAAC,CAAC;UAC5DT,UAAU,CAACY,UAAU,CAAC,CAAC;;UAGvB,IAAMG,GAAG,GAAGT,OAAO,CAACS,GAAG,IAAIC,OAAO,CAACD,GAAG,CAAC;UACvCtB,SAAS,CAAC,KAAK,EAAE;cAACY,OAAO;cAAE,MAAM;cAAER,aAAa;cAAEc,SAAS;cAAEC,UAAU;WAAC,EAAE;EAAEG,YAAAA,GAAG,EAAHA,GAAG;EAAEE,YAAAA,KAAK,EAAE,QAAQ;EAAE,SAAA,CAAC,CAAC;;EAGpGT,QAAAA,GAAG,GAAGb,UAAU,CAACuB,KAAK,CAAC5B,EAAE,CAAC6B,YAAY,CAACP,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;UAC5DZ,UAAU,CAACW,SAAS,CAAC,CAAC;UACtBX,UAAU,CAACY,UAAU,CAAC,CAAC;EACxB,KAAA;;MAGD,IAAIJ,GAAG,CAACY,KAAK,EAAE;UACb,IAAMC,GAAG,GAAG,IAAIC,KAAK,CAACd,GAAG,CAACY,KAAK,CAACG,OAAO,CAAC,CAAC;EACzC,QAAA,IAAIf,GAAG,CAACY,KAAK,CAACI,KAAK,EAAEH,GAAG,CAACG,KAAK,GAAGhB,GAAG,CAACY,KAAK,CAACI,KAAK,CAAC;EACjD,QAAA,MAAMH,GAAG,CAAC;EACX,KAAA;MACD,OAAOb,GAAG,CAACiB,KAAK,CAAC;;;;;;;;;"}