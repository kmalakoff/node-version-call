{"version":3,"file":"node-version-call.js","sources":["../../src/index.ts"],"sourcesContent":["const path = require('path');\nconst fs = require('fs');\nconst tmpdir = require('os').tmpdir || require('os-shim').tmpdir;\nconst suffix = require('temp-suffix');\nconst spawnSync = require('cross-spawn-cb').sync;\nconst JSONBuffer = require('json-buffer');\nconst mkdirp = require('mkdirp');\nconst callFn = require('./callFn');\n\nexport interface JSONObject {\n  [x: string]: any;\n}\nexport type CallOptions = {\n  args?: any[];\n  env?: JSONObject;\n};\n\nconst localCallFile = path.join(__dirname, 'localCall.js');\n\nfunction unlinkSafe(filename) {\n  try {\n    fs.unlinkSync(filename);\n  } catch {\n    // skip\n  }\n}\n\nexport default function call(filePath: string, version: string, options: CallOptions = {}): any {\n  const args = options.args || [];\n  let res;\n  if (version === 'local') res = callFn(filePath, args);\n  else {\n    const temp = path.join(tmpdir(), 'nvc');\n    const input = path.join(temp, suffix('input'));\n    const output = path.join(temp, suffix('output'));\n\n    // store data to a file\n    const callData = { filePath, args };\n    mkdirp.sync(path.dirname(input));\n    fs.writeFileSync(input, JSONBuffer.stringify(callData));\n    unlinkSafe(output);\n\n    // call the function\n    const env = options.env || process.env;\n    spawnSync('nvu', [version, 'node', localCallFile, input, output], { env, stdio: 'string' });\n\n    // get data and clean up\n    res = JSONBuffer.parse(fs.readFileSync(output, 'utf8'));\n    unlinkSafe(input);\n    unlinkSafe(output);\n  }\n\n  // error res\n  if (res.error) {\n    const err = new Error(res.error.message);\n    if (res.error.stack) err.stack = res.error.stack;\n    throw err;\n  }\n  return res.value;\n}\n"],"names":["path","require","fs","tmpdir","suffix","spawnSync","sync","JSONBuffer","mkdirp","callFn","localCallFile","join","__dirname","unlinkSafe","filename","unlinkSync","call","filePath","version","options","args","res","temp","input","output","callData","dirname","writeFileSync","stringify","env","process","stdio","parse","readFileSync","error","err","Error","message","stack","value"],"mappings":"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"}